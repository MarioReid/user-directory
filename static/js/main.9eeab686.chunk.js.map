{"version":3,"sources":["Input/Input.jsx","Employee/Employees.jsx","Jumbotron/Jumbotron.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","props","className","type","placeholder","onChange","handleChange","Employees","state","employees","displayedEmployees","handleClick","sortedArray","sort","a","b","nameA","name","last","toUpperCase","nameB","setState","console","log","event","input","target","value","filteredName","filter","employee","first","toLowerCase","includes","axios","get","then","result","data","results","catch","err","this","scope","id","onClick","class","aria-hidden","map","src","picture","thumbnail","alt","phone","email","dob","date","slice","Component","Jumbotron","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAUeA,EARD,SAACC,GACX,OACI,qBAAKC,UAAU,kBAAf,SACI,uBAAOC,KAAK,OAAOC,YAAY,SAASC,SAAUJ,EAAMK,kBCmGrDC,G,kNAnGbC,MAAQ,CACNC,UAAW,GACXC,mBAAoB,I,EAkBtBC,YAAc,WAEZ,IAAMC,EAAc,EAAKJ,MAAMC,UAAUI,MAAK,SAAUC,EAAGC,GACzD,IAAIC,EAAQF,EAAEG,KAAKC,KAAKC,cACpBC,EAAQL,EAAEE,KAAKC,KAAKC,cACxB,OAAIH,EAAQI,GACF,EAEDJ,EAAQI,EACR,EAIF,KAER,EAAKC,SAAS,CAACX,mBAAoBE,IACpCU,QAAQC,IAAIX,I,EAIdN,aAAe,SAACkB,GACd,IAAMC,EAAQD,EAAME,OAAOC,MAErBC,EAAe,EAAKpB,MAAMC,UAAUoB,QAAO,SAAAC,GAAQ,OAAIA,EAASb,KAAKc,MAAMC,cAAcC,SAASR,EAAMO,kBAC9G,EAAKX,SAAS,CAACX,mBAAoBkB,K,uDAvCrC,WAAqB,IAAD,OAClBM,IACGC,IAAI,yCACJC,MAAK,SAACC,GACLf,QAAQC,IAAIc,GACZ,EAAKhB,SAAS,CACZZ,UAAW4B,EAAOC,KAAKC,QACvB7B,mBAAoB2B,EAAOC,KAAKC,aAGnCC,OAAM,SAACC,GACNnB,QAAQC,IAAIkB,Q,oBAmClB,WACE,OACE,qCACA,cAAC,EAAD,CAAOnC,aAAcoC,KAAKpC,eAC1B,qBAAKJ,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIyC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,SACE,uBAAMC,GAAG,OAAOC,QAASH,KAAK/B,YAA9B,kBACO,mBAAGmC,MAAM,mBAAmBC,cAAY,cAIjD,oBAAIJ,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBAGJ,gCACGD,KAAKlC,MAAME,mBAAmBsC,KAAI,SAACvC,GAClC,OACE,+BACE,6BACE,qBAAKwC,IAAKxC,EAAUyC,QAAQC,UAAWC,IAAI,OAE7C,+BACG3C,EAAUQ,KAAKc,MADlB,IAC0BtB,EAAUQ,KAAKC,QAEzC,6BAAKT,EAAU4C,QACf,6BAAK5C,EAAU6C,QACf,6BAAK7C,EAAU8C,IAAIC,KAAKC,MAAM,EAAG,8B,GAtF/BC,cCUTC,G,kKAVX,WACI,OACI,sBAAKzD,UAAU,8BAAf,UACI,oDACA,sH,GALQwD,cCWTE,MAVf,WACE,OACE,sBAAK1D,UAAU,MAAf,UACA,cAAC,EAAD,IAEA,cAAC,EAAD,QCGW2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9eeab686.chunk.js","sourcesContent":["import React from 'react';\n\nconst Input = (props) => {\n    return (\n        <div className=\"m-5 text-center\">\n            <input type=\"text\" placeholder=\"Search\" onChange={props.handleChange} />\n        </div>\n    );\n};\n\nexport default Input;","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport Input from '../Input/Input';\nimport \"./Employee.css\";\nclass Employees extends Component {\n  state = {\n    employees: [],\n    displayedEmployees: []\n  };\n//API\n  componentDidMount() {\n    axios\n      .get(\"https://randomuser.me/api/?results=10\")\n      .then((result) => {\n        console.log(result);\n        this.setState({\n          employees: result.data.results,\n          displayedEmployees: result.data.results\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleClick = () => {\n    // sort by name\n    const sortedArray = this.state.employees.sort(function (a, b) {\n      var nameA = a.name.last.toUpperCase(); // ignore upper and lowercase\n      var nameB = b.name.last.toUpperCase(); // ignore upper and lowercase\n      if (nameA < nameB) {\n        return -1;\n      }\n      else if (nameA > nameB) {\n        return 1;\n      }\n\n      // names must be equal\n      return 0;\n    });\n     this.setState({displayedEmployees: sortedArray})\n    console.log(sortedArray);\n  }\n\n\n  handleChange = (event)=>{\n    const input = event.target.value;\n    \n    const filteredName = this.state.employees.filter(employee => employee.name.first.toLowerCase().includes(input.toLowerCase()));\n    this.setState({displayedEmployees: filteredName});\n\n\n\n   \n  }\n\n  render() {\n    return (\n      <>\n      <Input handleChange={this.handleChange}/>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Image</th>\n                  <th scope=\"col\">\n                    <span id=\"name\" onClick={this.handleClick}>\n                      Name <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n\n                    </span>\n                  </th>\n                  <th scope=\"col\">Phone</th>\n                  <th scope=\"col\">Email</th>\n                  <th scope=\"col\">DOB</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.displayedEmployees.map((employees) => {\n                  return (\n                    <tr>\n                      <td>\n                        <img src={employees.picture.thumbnail} alt=\"\" />\n                      </td>\n                      <td>\n                        {employees.name.first} {employees.name.last}\n                      </td>\n                      <td>{employees.phone}</td>\n                      <td>{employees.email}</td>\n                      <td>{employees.dob.date.slice(0, 10)}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default Employees;\n","import React, { Component } from 'react';\nimport \"./Jumbotron.css\";\n\nclass Jumbotron extends Component {\n    render() {\n        return (\n            <div className=\"jumbotron text-center -blue\">\n                <h1>Employee Directory</h1>\n                <p>Click on carrots to filter by heading or use the search box to narrow results.</p>\n            </div>\n        );\n    }\n}\n\nexport default Jumbotron;","import Employees from \"./Employee/Employees\";\n// import Input from \"./Input/Input\";\nimport Jumbotron from \"./Jumbotron/Jumbotron\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Jumbotron/>\n    {/* <Input/> */}\n    <Employees/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}